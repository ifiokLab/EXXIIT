# Generated by Django 4.1.6 on 2023-07-31 14:29

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deceased',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('death_cause', models.CharField(blank=True, max_length=255, null=True)),
                ('month_birth', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', ',May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=100)),
                ('day_birth', models.IntegerField()),
                ('year_birth', models.IntegerField(blank=True, null=True)),
                ('month_death', models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', ',May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=100, null=True)),
                ('day_death', models.IntegerField(blank=True, null=True)),
                ('year_death', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship_type', models.CharField(blank=True, choices=[('friend', 'Friend'), ('family', 'Family'), ('other', 'Other')], max_length=20, null=True)),
                ('audience', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Waitlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='myuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TributeReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('heart', models.ManyToManyField(blank=True, related_name='tribute_heart_reply', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='tribute_liked_reply', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.tributereply')),
                ('tribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tribute_replies', to='FuneralApp.tribute')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tribute',
            name='heart',
            field=models.ManyToManyField(blank=True, related_name='heart_tribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tribute',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_tribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tribute',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('friend', 'Friend'), ('family', 'Family'), ('other', 'Other')], max_length=20)),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.PositiveIntegerField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='Profile/')),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('followers', models.ManyToManyField(blank=True, null=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='Post/')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='Albums/')),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_photos', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('gift_type', models.CharField(blank=True, choices=[('Ribbon', 'Ribbon'), ('Candle', 'Candle'), ('Donations & Charity', 'Donations & Charity'), ('Tulip Flower', 'Tulip Flower'), ('Rose flower', 'Rose flower'), ('Tree', 'Tree')], max_length=20, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_gifts', to='FuneralApp.deceased')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_gifts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('celebration_type', models.CharField(choices=[('1', 'Funeral'), ('2', 'Graveside Service'), ('3', 'Viewing Service'), ('4', 'Visitation Service'), ('5', 'Memorial Service'), ('6', 'Celebration of Life'), ('7', 'Wake'), ('8', 'Other')], max_length=100)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=100)),
                ('streaming_link', models.CharField(blank=True, max_length=100, null=True)),
                ('host_image', models.ImageField(blank=True, null=True, upload_to='host-image/')),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='deceased',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='deceasedfollowing', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deceased',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('invitation_token', models.CharField(max_length=100, unique=True)),
                ('contributor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contributors_user', to=settings.AUTH_USER_MODEL)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('memorials', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contributors', to='FuneralApp.deceased')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('heart', models.ManyToManyField(blank=True, related_name='heart_comment', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comment', to=settings.AUTH_USER_MODEL)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.photoalbum')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='FuneralApp.comments')),
                ('heart', models.ManyToManyField(blank=True, related_name='heart_reply', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_reply', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.commentreply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lit', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BiographyFacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facts', models.CharField(blank=True, choices=[('1', 'Place of birth'), ('2', 'Most recently lived in'), ('3', 'favorite hobbies'), ('4', 'favorite foods'), ('5', 'Favorite bands and musical artists'), ('6', 'Interesting facts about'), ('7', 'If you could tell anything today, what would you say?'), ('8', 'loved nothing more than'), ('9', 'Favorite place in the world'), ('10', 'Favorite sports'), ('11', 'Favorite movies'), ('12', 'profession(s)'), ('13', 'superpower'), ('14', 'proudest accomplishments'), ('15', 'pets in life'), ('17', 'Favorite ice cream flavor'), ('18', 'Places traveled to'), ('19', 'Name of High School attended'), ('20', 'Name of college attended'), ('21', 'Name of  parents'), ('22', 'Name of siblings'), ('23', 'Name of children'), ('24', 'Name of grandchildren')], max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FuneralApp.deceased')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Biography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('early_life', models.TextField(blank=True, null=True)),
                ('career', models.TextField(blank=True, null=True)),
                ('personal_life', models.TextField(blank=True, null=True)),
                ('Awards', models.TextField(blank=True, null=True)),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='CoverPhoto/')),
                ('deceased', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biography', to='FuneralApp.deceased')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_cover', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
